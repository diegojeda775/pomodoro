{"ast":null,"code":"var _jsxFileName = \"/Users/diegoojeda/Desktop/www/Project_Pomodoro_Timer/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport ActiveDisplay from \"./ActiveDisplay\";\nimport Duration from \"./Duration\";\nimport PlayPause from \"./PlayPause\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeModeMaster, setTimeModeMaster] = useState({\n    focusCurrent: 25,\n    focusMin: 5,\n    focusMax: 60,\n    focusChange: 5,\n    focusCount: 25 * 60,\n    breakCurrent: 5,\n    breakMin: 1,\n    breakMax: 15,\n    breakChange: 1,\n    breakCount: 5 * 60,\n    mode: 'Initial'\n  }); // const { isTimerRunning } = timeModeMaster;\n\n  useInterval(() => {// ToDo: Implement what should happen when the timer is running\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setTimeModeMaster({ ...timeModeMaster,\n      mode: 'Focus'\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Duration, {\n    isTimerRunning: isTimerRunning,\n    timeModeMaster: timeModeMaster,\n    setTimeModeMaster: setTimeModeMaster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PlayPause, {\n    playPause: playPause,\n    timeModeMaster: timeModeMaster,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActiveDisplay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/diegoojeda/Desktop/www/Project_Pomodoro_Timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","ActiveDisplay","Duration","PlayPause","Pomodoro","isTimerRunning","setIsTimerRunning","timeModeMaster","setTimeModeMaster","focusCurrent","focusMin","focusMax","focusChange","focusCount","breakCurrent","breakMin","breakMax","breakChange","breakCount","mode","playPause","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC;AACnDU,IAAAA,YAAY,EAAE,EADqC;AAEnDC,IAAAA,QAAQ,EAAE,CAFyC;AAGnDC,IAAAA,QAAQ,EAAE,EAHyC;AAInDC,IAAAA,WAAW,EAAE,CAJsC;AAKnDC,IAAAA,UAAU,EAAE,KAAG,EALoC;AAMnDC,IAAAA,YAAY,EAAE,CANqC;AAOnDC,IAAAA,QAAQ,EAAE,CAPyC;AAQnDC,IAAAA,QAAQ,EAAE,EARyC;AASnDC,IAAAA,WAAW,EAAE,CATsC;AAUnDC,IAAAA,UAAU,EAAE,IAAE,EAVqC;AAWnDC,IAAAA,IAAI,EAAE;AAX6C,GAAD,CAApD,CAHkB,CAiBlB;;AAEAnB,EAAAA,WAAW,CACT,MAAM,CACJ;AACD,GAHQ,EAITK,cAAc,GAAG,IAAH,GAAU,IAJf,CAAX;;AAOA,WAASe,SAAT,GAAqB;AACnBd,IAAAA,iBAAiB,CAAEe,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACAb,IAAAA,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBY,MAAAA,IAAI,EAAE;AAA1B,KAAD,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,cAAc,EAAEd,cADlB;AAEE,IAAA,cAAc,EAAEE,cAFlB;AAGE,IAAA,iBAAiB,EAAEC,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEY,SADb;AAEE,IAAA,cAAc,EAAEb,cAFlB;AAGE,IAAA,cAAc,EAAEF,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAWE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport ActiveDisplay from \"./ActiveDisplay\";\nimport Duration from \"./Duration\";\nimport PlayPause from \"./PlayPause\";\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeModeMaster, setTimeModeMaster] = useState({\n    focusCurrent: 25,\n    focusMin: 5,\n    focusMax: 60,\n    focusChange: 5,\n    focusCount: 25*60,\n    breakCurrent: 5,\n    breakMin: 1,\n    breakMax: 15,\n    breakChange: 1,\n    breakCount: 5*60,\n    mode: 'Initial',\n  });\n\n  // const { isTimerRunning } = timeModeMaster;\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState)\n    setTimeModeMaster({...timeModeMaster, mode: 'Focus'});\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <Duration \n        isTimerRunning={isTimerRunning} \n        timeModeMaster={timeModeMaster}\n        setTimeModeMaster={setTimeModeMaster}\n        />\n      <PlayPause \n        playPause={playPause} \n        timeModeMaster={timeModeMaster} \n        isTimerRunning={isTimerRunning}\n        />\n      <ActiveDisplay />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}